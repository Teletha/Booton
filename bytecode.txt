{
mv = cw.visitMethod(ACC_PUBLIC, "forEachRemaining", "(Ljava/util/function/Consumer;)V", "(Ljava/util/function/Consumer<-TT;>;)V", null);
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(944, l0);
mv.visitVarInsn(ALOAD, 1);
Label l1 = new Label();
mv.visitJumpInsn(IFNONNULL, l1);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitLineNumber(945, l2);
mv.visitTypeInsn(NEW, "java/lang/NullPointerException");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/NullPointerException", "<init>", "()V");
mv.visitInsn(ATHROW);
mv.visitLabel(l1);
mv.visitLineNumber(946, l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "java/util/Spliterators$ArraySpliterator", "array", "[Ljava/lang/Object;");
mv.visitInsn(DUP);
mv.visitVarInsn(ASTORE, 2);
mv.visitInsn(ARRAYLENGTH);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "java/util/Spliterators$ArraySpliterator", "fence", "I");
mv.visitInsn(DUP);
mv.visitVarInsn(ISTORE, 4);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "java/util/Spliterators$ArraySpliterator", "index", "I");
mv.visitInsn(DUP);
mv.visitVarInsn(ISTORE, 3);
mv.visitJumpInsn(IFLT, l3);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 4);
mv.visitInsn(DUP_X1);
mv.visitFieldInsn(PUTFIELD, "java/util/Spliterators$ArraySpliterator", "index", "I");
mv.visitJumpInsn(IF_ICMPGE, l3);
Label l4 = new Label();
mv.visitLabel(l4);
mv.visitLineNumber(948, l4);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/function/Consumer", "accept", "(Ljava/lang/Object;)V");
mv.visitIincInsn(3, 1);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 4);
mv.visitJumpInsn(IF_ICMPLT, l4);
mv.visitLabel(l3);
mv.visitLineNumber(950, l3);
mv.visitFrame(Opcodes.F_FULL, 5, new Object[] {"java/util/Spliterators$ArraySpliterator", "java/util/function/Consumer", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitInsn(RETURN);
mv.visitMaxs(4, 5);
mv.visitEnd();
}
cw.visitEnd();

return cw.toByteArray();
}
}
