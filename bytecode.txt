{
mv = cw.visitMethod(ACC_PUBLIC, "constructor", "()V", null, new String[] { "java/lang/Exception" });
{
av0 = mv.visitAnnotation("Lorg/junit/Test;", true);
av0.visitEnd();
}
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(27, l0);
mv.visitInvokeDynamicInsn("apply", "()Ljava/util/function/Function;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"), new Object[]{Type.getType("(Ljava/lang/Object;)Ljava/lang/Object;"), new Handle(Opcodes.H_NEWINVOKESPECIAL, "java/lang/String", "<init>", "([C)V"), Type.getType("([C)Ljava/lang/String;")});
mv.visitVarInsn(ASTORE, 1);
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitLineNumber(28, l1);
mv.visitFieldInsn(GETSTATIC, "booton/translator/lambda/ConstructorReferenceTest", "$assertionsDisabled", "Z");
Label l2 = new Label();
mv.visitJumpInsn(IFNE, l2);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_3);
mv.visitIntInsn(NEWARRAY, T_CHAR);
mv.visitInsn(DUP);
mv.visitInsn(ICONST_0);
mv.visitIntInsn(BIPUSH, 97);
mv.visitInsn(CASTORE);
mv.visitInsn(DUP);
mv.visitInsn(ICONST_1);
mv.visitIntInsn(BIPUSH, 98);
mv.visitInsn(CASTORE);
mv.visitInsn(DUP);
mv.visitInsn(ICONST_2);
mv.visitIntInsn(BIPUSH, 99);
mv.visitInsn(CASTORE);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/function/Function", "apply", "(Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitTypeInsn(CHECKCAST, "java/lang/String");
mv.visitLdcInsn("abc");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
mv.visitJumpInsn(IFNE, l2);
mv.visitTypeInsn(NEW, "java/lang/AssertionError");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/AssertionError", "<init>", "()V");
mv.visitInsn(ATHROW);
mv.visitLabel(l2);
mv.visitLineNumber(29, l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/function/Function"}, 0, null);
mv.visitInsn(RETURN);
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitLocalVariable("this", "Lbooton/translator/lambda/ConstructorReferenceTest;", null, l0, l3, 0);
mv.visitLocalVariable("f", "Ljava/util/function/Function;", "Ljava/util/function/Function<[CLjava/lang/String;>;", l1, l3, 1);
mv.visitMaxs(5, 2);
mv.visitEnd();
}
cw.visitEnd();

return cw.toByteArray();
}
}
